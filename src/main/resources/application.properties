# For PostgreSQL
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ec2-54-163-230-199.compute-1.amazonaws.com:5432/d5b3rff9mnvaia?user=cgpiiolvjljwfd&password=b5dd71f7b1ef41ed49b1503fc4087d3466c094c12a9c6276ef743f3bc5d0f5e2&sslmode=require}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:cgpiiolvjljwfd}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:b5dd71f7b1ef41ed49b1503fc4087d3466c094c12a9c6276ef743f3bc5d0f5e2}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# For H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
server.port=${PORT:2055}
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
#spring.datasource.initialization-mode=always

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true

#postgres://cgpiiolvjljwfd:b5dd71f7b1ef41ed49b1503fc4087d3466c094c12a9c6276ef743f3bc5d0f5e2@ec2-54-163-230-199.compute-1.amazonaws.com:5432/d5b3rff9mnvaia